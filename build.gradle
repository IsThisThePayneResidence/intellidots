buildscript {
    repositories {
        maven {
            name 'JFrog OSS snapshot repo'
            url  'https://oss.jfrog.org/oss-snapshot-local/'
        }
        jcenter()
        mavenLocal()
        mavenCentral()
        maven {
            url "https://repo.grails.org/grails/core"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.11.6"
        classpath "org.grails.plugins:hibernate5:6.0.4"
        classpath 'me.champeau.gradle:antlr4-gradle-plugin:0.1.1-SNAPSHOT'
        classpath "gradle.plugin.com.github.rzabini:gradle-jython:1.0.2"
//        classpath "org.antlr:antlr4:4.5" // use ANTLR version 4
    }
}

version "0.1"
group "intellidots"

apply plugin:"java"
apply plugin:"me.champeau.gradle.antlr4"
apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"
apply plugin:"com.github.rzabini.gradle-jython"
//apply plugin: 'antlr'

antlr4 {
    source = file('src/main/antlr')
    output = file('src/main/java/generated/ua/edu/hneu/ast/parsers')
    extraArgs = ['-package', 'ua.edu.hneu.ast.parsers']
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    mavenCentral()
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}
compileJava.dependsOn antlr4

sourceSets.main.java.srcDirs += antlr4.output

configurations {
    compile.extendsFrom antlr4
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.2.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.2.Final"
    compile "org.grails.plugins:spring-security-core:3.1.1"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.11.6"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    jython ":boto3:1.1.3"

}

bootRun {
    jvmArgs = ['-Dspring.output.ansi.enabled=always']
}

assets {
    minifyJs = true
    minifyCss = true
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Languages-Parser',
                'Implementation-Version': '0.0.1'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}